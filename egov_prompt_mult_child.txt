-- 명령 0 --

본 작업을 위해 참고할 Github 링크는 아래와 같음. 먼저 링크가 정상적으로 접근이 가능한지 알려줘
- SQL_Mapper 패턴 : https://github.com/lee47039853/template/blob/main/egov/mapper/survey/SurveyMaster_SQL_mysql.xml
- Master 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/service/SurveyMaster.java
- MasterVO 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/service/SurveyMasterVO.java
- Mapper 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/service/impl/SurveyManageMapper.java
- Serviceimpl 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/service/impl/SurveyManageServiceImpl.java
- Service 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/service/SurveyManageService.java
- Controller 패턴 : https://github.com/lee47039853/template/blob/main/egov/java/survey/web/SurveyManageController.java
- Validator 패턴 : https://github.com/lee47039853/template/blob/main/egov/validator/survey/PortalSurveyManage.xml

-- 명령 2 --

아래 'DDL'과 'DDL의 관계'를 기반으로 `TB_CRAWLING_SUPPORT_ATT`를 지원하는 SQL_Mapper, Master, MasterVO, Mapper, Serviceimpl, Service, Controller, Validator 를 만들어줘.
단 위의 Github 링크 정의한 'SQL_Mapper 패턴', 'Master 패턴', 'MasterVO 패턴', 'Mapper 패턴', 'Serviceimpl 패턴', 'Service 패턴', 'Controller를 패턴', 'Validator 패턴' 과 매유 유사한 모습으로 만들어줘.

그리고, 생성할 소스는 아래 '명칭'을 준용해줘
- SQL_Mapper 명칭 : CrawlingSupportAttMaster_SQL_mysql.xml
- Master 명칭 : kr.or.ifac.modules.portal.support.service.CrawlingSupportAttMaster
- MasterVO 명칭 : kr.or.ifac.modules.portal.support.service.CrawlingSupportAttMasterVO
- Mapper 멍칭 : kr.or.ifac.modules.portal.support.service.impl.CrawlingSupportAttManageMapper
- Serviceimpl 명칭 : kr.or.ifac.modules.portal.support.service.impl.CrawlingSupportAttManageServiceImpl.java
- Service 명칭 : kr.or.ifac.modules.portal.support.service.CrawlingSupportAttManageService.java
- Controller 명칭 : kr.or.ifac.modules.portal.support.service.web.CrawlingSupportAttManageController.java
- Validator 명칭 : PortalCrawlingSupportAttManage.xml

그리고  SQL_Mapper 생성시 아래 조건이 반영되어야 함
- `TB_CRAWLING_SUPPORT_ATT`의 `REG_DATE` 는 현재날자를 입력되어야 함.
- `TB_CRAWLING_SUPPORT_ATT`의 List 조회시 `TB_CRAWLING_SUPPORT`의 `TITLE`, `WRITER` 를 함께 조회함.

그리고  Master와 MasterVO 생성시 아래 조건이 반영되어야 함
- `TB_CRAWLING_SUPPORT_ATT`를 기반으로 생성함 
- `TB_CRAWLING_SUPPORT`의 `TITLE`, `WRITER` 항목을 추가함

그리고, Controller 생성시 아래 조건이 반영되어야 함
- MasterVO에 registId 속성이 없는 경우 LoginVO 를 추출하는 코드와 MasterVO의 setRegistId 함수 호출 부분은 생성하지 말아야함.

그리고, Validator 생성시 아래 조건이 반영되어야 함
- `TB_CRAWLING_SUPPORT_ATT`의 `SQ`, `REG_DATE` 는 검증항목에서 제외되어야 함.


- DDL -

CREATE TABLE `TB_CRAWLING_SUPPORT` (
  `SQ` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '연번',
  `SOURCE` varchar(15) NOT NULL COMMENT '사이트 유형(공통코드)',
  `CONTENTS_KEY` varchar(200) NOT NULL COMMENT '컨텐츠 키값',
  `LINK_URL` varchar(300) DEFAULT NULL COMMENT '링크 url',
  `TITLE` varchar(100) NOT NULL COMMENT '프로그램명',
  `WRITER` varchar(100) DEFAULT NULL COMMENT '대상',
  `CONTENTS` mediumtext DEFAULT NULL COMMENT '소개',
  `SHOW_YN` enum('Y','N') NOT NULL DEFAULT 'N' COMMENT '노출여부',
  `REG_DATE` datetime NOT NULL COMMENT '등록날짜',
  `REQUEST_ST_DATE` varchar(20) DEFAULT NULL COMMENT '신청 시작 날짜',
  `REQUEST_ST_TIME` varchar(5) DEFAULT NULL COMMENT '신청 시작 시간',
  `REQUEST_ED_DATE` varchar(20) DEFAULT NULL COMMENT '신청 종료 날짜',
  `REQUEST_ED_TIME` varchar(5) DEFAULT NULL COMMENT '신청 종료 시간',
  `REF` int(10) unsigned NOT NULL DEFAULT 0 COMMENT '조회수',
  `SUP_TYPE_LIST` varchar(200) DEFAULT NULL COMMENT '지원 유형',
  `SUP_TARGET_LIST` varchar(200) DEFAULT NULL COMMENT '지원 대상',
  `SUP_GENRE_LIST` varchar(200) DEFAULT NULL COMMENT '지원 장르',
  `SUP_GUNGU_LIST` varchar(200) DEFAULT NULL COMMENT '지원 지역(군구)',
  PRIMARY KEY (`SQ`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=360 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='지원사업'

CREATE TABLE `TB_CRAWLING_SUPPORT_ATT` (
  `SQ` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '연번',
  `SUPPORT_SQ` int(10) unsigned NOT NULL COMMENT '지원사업 연번',
  `FILE_NAME` varchar(200) NOT NULL COMMENT '파일 이름',
  `FILE_LINK` varchar(600) DEFAULT NULL COMMENT '파일 링크',
  `REG_DATE` datetime NOT NULL COMMENT '등록날짜',
  PRIMARY KEY (`SQ`) USING BTREE
) ENGINE=Aria AUTO_INCREMENT=357 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci PAGE_CHECKSUM=1 COMMENT='지원사업 첨부파일'

- DDL의 관계 -
`TB_CRAWLING_SUPPORT` 와 `TB_CRAWLING_SUPPORT_ATT` 는 1 : N 관계를 가짐
`TB_CRAWLING_SUPPORT_ATT` 의 `SUPPORT_SQ` 는 `TB_CRAWLING_SUPPORT` 의  `SQ` 를 참조함.



-- 명령 2 --

1.위에서 생성한 java 소스를 기반으로 PortalCrawlingSupportAttList.jsp 화면을 만들어줘.
단 아래 Github에 정의한 'List.jsp 패턴' 과 유사한 모습으로 만들어줘.
- List.jsp 패턴 : https://github.com/lee47039853/template/blob/main/egov/jsp/survey/PortalSurveyList.jsp
그리고, 아래의 검색조건과 검색결과가 반뎡되어야햠.
- 검색조건 순서 : `TITLE`, `WRITER`
- 검색결과 순서 : '번호', 체크박스, `TITLE`, `WRITER`, `SUPPORT_SQ`, `FILE_NAME`, `FILE_LINK`, `REG_DATE`
- 상세보기 링크 : '파일 이름' 항목에 적용해줘


2.위에서 생성한 java 소스를 기반으로 PortalCrawlingSupportAttInsert.jsp 화면을 만들어줘.
단 아래 Github에 정의한 'Insert.jsp 패턴'과 유사한 모습으로 만들어줘.
- Insert.jsp 패턴 : https://github.com/lee47039853/template/blob/main/egov/jsp/survey/PortalSurveyInsert.jsp
그리고 야래의 CKEDITOR 적용항목과 임력제외항목이 반영되어야함.
- CKEDITOR 적용항목 : 없음 (주석처리 필요)
- 입력제외항목 : `SQ`, `REG_DATE`


3.위에서 생성한 java 소스를 기반으로 PortalCrawlingSupportAttSelectUpdt.jsp 화면을 만들어줘.
단 아래 Github에 정의한 Updt.jsp과 유사한 모습으로 만들어줘.
- Updt.jsp 패턴 : https://github.com/lee47039853/template/blob/main/egov/jsp/survey/PortalSurveySelectUpdt.jsp
그리고 야래의 CKEDITOR 적용항목과 수정제외항목이 반영되어야함.
- CKEDITOR 적용항목 : 없음 (주석처리 필요)
- 입력제외항목 : `SQ`, `REG_DATE`
